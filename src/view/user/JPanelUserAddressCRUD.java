/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.user;

import controller.Controller;
import controller.UserBackendController;
import domain.user.Address;
import domain.user.AppUser;
import domain.user.Country;
import domain.UserCRUDType;
import java.awt.Color;
import java.lang.reflect.Field;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

/**
 *
 * @author Nikola
 */
public class JPanelUserAddressCRUD extends javax.swing.JPanel {

    private final AppUser appUser;
    private final UserCRUDType cRUDType;
    private boolean formSubmitetedOnce = false;
    private final JPanelUserCrud parent;

    /**
     * Creates new form JPanelUserCRUD
     *
     * @param appUser
     * @param cRUDType
     * @param parent
     */
    public JPanelUserAddressCRUD(AppUser appUser, UserCRUDType cRUDType, JPanelUserCrud parent) {
        initComponents();
        this.appUser = appUser;
        this.cRUDType = cRUDType;
        this.parent = parent;
        initCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldPostalCode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldStreetNumber = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonNextStep = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        CityFieldErrorLabel = new javax.swing.JLabel();
        PostalCodeFieldErrorLabel = new javax.swing.JLabel();
        StreetNumberFieldErrorLabel = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldStreetName = new javax.swing.JTextField();
        StreetNameFieldErrorLabel = new javax.swing.JLabel();
        jComboBoxCountry = new javax.swing.JComboBox<>();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Border Title Add/Edit/Read"));

        jLabel1.setText("Country");

        jLabel2.setText("City");

        jTextFieldCity.setName("CityField"); // NOI18N
        jTextFieldCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCityKeyReleased(evt);
            }
        });

        jLabel3.setText("Postal code");

        jTextFieldPostalCode.setName("PostalCodeField"); // NOI18N
        jTextFieldPostalCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPostalCodeKeyReleased(evt);
            }
        });

        jLabel4.setText("Street Number");

        jTextFieldStreetNumber.setName("StreetNumberField"); // NOI18N
        jTextFieldStreetNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldStreetNumberKeyReleased(evt);
            }
        });

        jButtonNextStep.setText("Next Step");
        jButtonNextStep.setEnabled(false);
        jButtonNextStep.setMaximumSize(new java.awt.Dimension(100, 25));
        jButtonNextStep.setMinimumSize(new java.awt.Dimension(100, 25));
        jButtonNextStep.setPreferredSize(new java.awt.Dimension(100, 25));
        jButtonNextStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextStepActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.setMaximumSize(new java.awt.Dimension(100, 25));
        jButtonCancel.setMinimumSize(new java.awt.Dimension(100, 25));
        jButtonCancel.setPreferredSize(new java.awt.Dimension(100, 25));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        PostalCodeFieldErrorLabel.setText(" ");
        PostalCodeFieldErrorLabel.setMaximumSize(new java.awt.Dimension(0, 0));
        PostalCodeFieldErrorLabel.setMinimumSize(new java.awt.Dimension(0, 0));
        PostalCodeFieldErrorLabel.setPreferredSize(new java.awt.Dimension(0, 0));

        jButtonSave.setText("Save User");
        jButtonSave.setMaximumSize(new java.awt.Dimension(100, 25));
        jButtonSave.setMinimumSize(new java.awt.Dimension(100, 25));
        jButtonSave.setPreferredSize(new java.awt.Dimension(100, 25));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonBack.setText("Back");
        jButtonBack.setMaximumSize(new java.awt.Dimension(100, 25));
        jButtonBack.setMinimumSize(new java.awt.Dimension(100, 25));
        jButtonBack.setPreferredSize(new java.awt.Dimension(100, 25));
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jLabel5.setText("Street Name");

        jTextFieldStreetName.setName("StreetNameField"); // NOI18N
        jTextFieldStreetName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldStreetNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldCity)
                            .addComponent(jComboBoxCountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 114, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CityFieldErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonNextStep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(StreetNumberFieldErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(StreetNameFieldErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PostalCodeFieldErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPostalCode)
                            .addComponent(jTextFieldStreetNumber)
                            .addComponent(jTextFieldStreetName))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CityFieldErrorLabel)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PostalCodeFieldErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldStreetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(StreetNameFieldErrorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldStreetNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StreetNumberFieldErrorLabel)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 249, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNextStep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        SwingUtilities.getWindowAncestor(this).setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonNextStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextStepActionPerformed

    }//GEN-LAST:event_jButtonNextStepActionPerformed

    private void jTextFieldCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCityKeyReleased
        if (formSubmitetedOnce) {
            validateOneField(jTextFieldCity);
        }
    }//GEN-LAST:event_jTextFieldCityKeyReleased

    private void jTextFieldPostalCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPostalCodeKeyReleased
        if (formSubmitetedOnce) {
            validateOneField(jTextFieldPostalCode);
        }
    }//GEN-LAST:event_jTextFieldPostalCodeKeyReleased

    private void jTextFieldStreetNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldStreetNumberKeyReleased
        if (formSubmitetedOnce) {
            validateOneField(jTextFieldStreetNumber);
        }
    }//GEN-LAST:event_jTextFieldStreetNumberKeyReleased

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        formSubmitetedOnce = true;
        boolean formValid;
        try {
            formValid = validateAddress();
        } catch (NoSuchFieldException | IllegalArgumentException | IllegalAccessException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "System Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!formValid) {
            return;
        }

        Address address = appUser.getAddress() == null ? new Address() : appUser.getAddress();

        address.setCountry((Country) jComboBoxCountry.getSelectedItem());
        address.setCity(jTextFieldCity.getText().trim());
        address.setPostalCode(jTextFieldPostalCode.getText().trim());
        address.setStreetNumber(jTextFieldStreetNumber.getText().trim());
        address.setStreetName(jTextFieldStreetName.getText().trim());

        appUser.setAddress(address);

        switch (cRUDType) {
            case ADD:
            case EDIT: {
                try {
                    UserBackendController.getController().saveAppUser(appUser);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "System Error. " + ex.getMessage(), "System Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            break;
            default:
                JOptionPane.showMessageDialog(null, "System Error. This shouldnt have hapend", "System Error", JOptionPane.ERROR_MESSAGE);
        }

        JOptionPane.showMessageDialog(null, "User saved successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        parent.closeCrudWindow();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        parent.goToBasicInfoStep();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jTextFieldStreetNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldStreetNameKeyReleased
        if (formSubmitetedOnce) {
            validateOneField(jTextFieldStreetName);
        }
    }//GEN-LAST:event_jTextFieldStreetNameKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CityFieldErrorLabel;
    private javax.swing.JLabel PostalCodeFieldErrorLabel;
    private javax.swing.JLabel StreetNameFieldErrorLabel;
    private javax.swing.JLabel StreetNumberFieldErrorLabel;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonNextStep;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<Country> jComboBoxCountry;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldCity;
    private javax.swing.JTextField jTextFieldPostalCode;
    private javax.swing.JTextField jTextFieldStreetName;
    private javax.swing.JTextField jTextFieldStreetNumber;
    // End of variables declaration//GEN-END:variables

    private boolean validateAddress() throws NoSuchFieldException, IllegalArgumentException, IllegalAccessException {
        boolean formValid = true;

        if (!validateIsEmpty(jTextFieldCity, jTextFieldStreetName, jTextFieldPostalCode, jTextFieldStreetNumber)) {
            JOptionPane.showMessageDialog(this, "All fields on form are mentatory!", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return formValid;
    }

    private boolean validateIsEmpty(JTextField... fields) throws NoSuchFieldException, IllegalArgumentException, IllegalAccessException {
        boolean fieldsNotEmpty = true;
        for (JTextField field : fields) {
            if (field.getText().isEmpty()) {
                fieldsNotEmpty = false;
                Field fieldError = this.getClass().getDeclaredField(field.getName() + "ErrorLabel");
                JLabel errorLab = (JLabel) fieldError.get(this);
                errorLab.setText("Please fill this field!");
                errorLab.setForeground(Color.red);
            }
        }

        return fieldsNotEmpty;
    }

    private void validateOneField(JTextField field) {
        try {
            Field fieldError = this.getClass().getDeclaredField(field.getName() + "ErrorLabel");
            JLabel errorLab = (JLabel) fieldError.get(this);

            if (field.getText().isEmpty()) {
                errorLab.setText("Please fill this field!");
                errorLab.setForeground(Color.red);
            } else {
                errorLab.setText(null);
            }

        } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void initCustomComponents() {
        try {
            List<Country> countryList = controller.Controller.getController().getAllAvailableCountries();
            for (Country country : countryList) {
                jComboBoxCountry.addItem(country);
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        switch (cRUDType) {
            case ADD:
                break;
            case VIEW:
                jButtonSave.setEnabled(false);
                jComboBoxCountry.setEnabled(false);
                Arrays.asList(jTextFieldCity, jTextFieldStreetName, jTextFieldPostalCode, jTextFieldStreetNumber)
                        .stream()
                        .forEach((field) -> field.setEditable(false));
            case EDIT:
                formSubmitetedOnce = true;
                setUpFields();
                break;
        }
    }

    private void setUpFields() {
        if (appUser.getAddress().getCountry() != null) {
            jComboBoxCountry.setSelectedItem(appUser.getAddress().getCountry());
        }
        jTextFieldCity.setText(appUser.getAddress().getCity());
        jTextFieldPostalCode.setText(appUser.getAddress().getPostalCode());
        jTextFieldStreetName.setText(appUser.getAddress().getStreetName());
        jTextFieldStreetNumber.setText(appUser.getAddress().getStreetNumber());
    }
}
